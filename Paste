# MenuTitle: Paste
# -*- coding: utf-8 -*-
from AppKit import NSPasteboard, NSUTF8StringEncoding
from Foundation import NSString
import GlyphsApp
import vanilla


class PasteShapesDialog(object):
    def __init__(self):
        self.w = vanilla.FloatingWindow((200, 70), "Paste Shapes")
        
        self.w.text = vanilla.TextBox((10, 10, -10, 20), "Paste from?")
        self.w.left_button = vanilla.Button((10, 40, 80, 20), "Left", callback=self.left_callback)
        self.w.right_button = vanilla.Button((110, 40, 80, 20), "Right", callback=self.right_callback)
        
        self.w.open()
    
    def left_callback(self, sender):
        self.paste_shapes_keep_coordinates(measure_from_right=False)
        self.w.close()
    
    def right_callback(self, sender):
        self.paste_shapes_keep_coordinates(measure_from_right=True)
    def paste_shapes_keep_coordinates(self, measure_from_right):
        pasteboard = NSPasteboard.generalPasteboard()
        typeName = pasteboard.availableTypeFromArray_(["Glyphs elements pasteboard type"])
        if typeName == "Glyphs elements pasteboard type":
            Data = pasteboard.dataForType_(typeName)
            theText = NSString.alloc().initWithData_encoding_(Data, NSUTF8StringEncoding)
            Dictionary = theText.propertyList()
            if Dictionary is not None:
                source_glyph_name = Dictionary['glyph']
                source_glyph = Glyphs.font.glyphs[source_glyph_name]
                
                for source_layer in source_glyph.layers:
                    copied_paths = [path.copy() for path in source_layer.paths if path.selected]
                    
                    for sel_layer in Glyphs.font.selectedLayers:
                        target_layer = sel_layer.parent.layers[source_layer.layerId]
                        if not target_layer:
                            continue

                        for path in copied_paths:
                            new_path = path.copy()
                            target_layer.paths.append(new_path)

                            if measure_from_right:
                                offset = target_layer.width - source_layer.width
                                for node in new_path.nodes:
                                    node.x += offset

# Show the dialog to the user
PasteShapesDialog()
